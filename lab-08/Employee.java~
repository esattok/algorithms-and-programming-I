/**
 * 
 * @author Esad Ismail TÃ¶k
 * @version 02.05.2019
 */ 

public class Employee {
//Constants 
 private static final int WORKING_DAYS = 270; 
  
 //Instance variables 
 private String employeeName; 
 private double dailyRate; 
 private Department department; 
 private Project project; 
  
 //Methods 
 //Constructors 
 public Employee( String Employee_name, double daily_rate, Project project, String department_name, String department_code ) { 
  department = new Department (department_name, department_code); 
  setemployeeName( Employee_name ); 
  setdailyRate( daily_rate ); 
  setproject( project ); 
 } 
 public Employee copyConstructor( Employee project1 ) { 
  Employee employee = project1; 
  return employee; 
 } 
 public void setemployeeName( String name ) { 
  employeeName = name; 
 } 
 public void setdailyRate( double rate ) { 
  dailyRate = rate; 
 } 
 public void setproject( Project project ) { 
  this.project = project; 
 } 
 //Mutators 
 /** 
    Returns employee's Name 
    @return employee Name 
  */ 
 public String getemployeeName() { 
  return employeeName; 
 } 
  
 /** 
    Returns daily rate of the employee 
    @return daily rate of the employee 
  */ 
 public double getdailyRate() { 
  return dailyRate; 
 } 
  
 /** 
    Returns department of the employee 
    @return department of the employee 
  */ 
 public Department getdepartment() { 
  return department; 
 } 
  
 /** 
    Returns project 
    @return project 
  */ 
 public Project getproject() { 
  return project; 
 } 
  
 //Other methods 
 /** 
  * Calculates and returns yearly salary 
  * @return yearly salary 
  */ 
 public double calculateYearlySalary() { 
  return WORKING_DAYS * getdailyRate(); 
 } 
  
 /** 
    @return a String representation of an Employee( Employee name and annual Salary) 
  */ 
 public String toString() { 
  return "Employee Name: " + getemployeeName() + " Yearly Salary: " + calculateYearlySalary() + "\n" + 
    "Dept Name " + department.getdeptName() + "Dept Code " + department.getdeptCode() + "\n" + 
    project.toString() + "\n";    
 } 
}